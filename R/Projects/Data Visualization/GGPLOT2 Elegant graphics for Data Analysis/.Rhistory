ggplot(aes(color, slope, group = cut, color = cut)) +
geom_point() +
geom_line(stat = 'summary', fun = mean) +
scale_color_brewer(palette = 'Set2') +
facet_wrap(~ clarity, nrow = 2, scales = 'free_y') +
theme_dark() +
theme(legend.position = 'top')
diamonds_slope_intercept %>%
ggplot(aes(color, slope, group = cut, color = cut)) +
geom_point() +
geom_line(stat = 'summary', fun = mean) +
scale_color_brewer(palette = 'Set2') +
facet_wrap(~ clarity, nrow = 2, scales = 'free_y') +
theme_dark() +
theme(legend.position = 'top')
diamonds_slope_intercept %>%
ggplot(aes(color, slope, group = cut, color = cut)) +
geom_point() +
geom_line(stat = 'summary', fun = mean) +
scale_color_brewer(palette = 'Set2') +
facet_wrap(~ clarity, nrow = 2, scales = 'free_y') +
theme_dark() +
theme(legend.position = 'top')
diamonds_slope_intercept %>%
ggplot(aes(color, slope, group = cut, color = cut)) +
geom_point() +
geom_line(stat = 'summary', fun = mean) +
scale_color_brewer(palette = 'Set2') +
facet_wrap(~ clarity, nrow = 2, scales = 'free_y') +
theme_dark() +
theme(legend.position = 'top')
diamonds_slope_intercept %>%
ggplot(aes(color, slope, group = cut, color = cut)) +
geom_point() +
geom_line(stat = 'summary', fun = mean) +
scale_color_brewer(palette = 'Set2') +
facet_wrap(~ clarity, nrow = 2) +
theme_dark() +
theme(legend.position = 'top')
# Compare the intercept when the clarity changes
diamonds_slope_intercept %>%
ggplot(aes(color, intercept, group = cut, color = cut)) +
geom_point() +
geom_line(stat = 'summary', fun = mean) +
scale_color_brewer(palette = 'Set2') +
facet_wrap(~ clarity, nrow = 2) +
theme_dark() +
theme(legend.position = 'top')
txhousing_model
txhousing_model %>%
mutate(obs = model %>% map(generics::augment)) %>%
unnest(obs)
?augment
txhousing_model %>%
mutate(obs = model %>% map(generics::augment, na.action = na.exclude)) %>%
unnest(obs)
txhousing_model %>% mutate(v = model %>% map(glance)) %>% unnest(v)
txhousing_model %>% mutate(v = model %>% map(tidy)) %>% unnest(v)
txhousing_model %>% mutate(v = model %>% map(augment)) %>% unnest(v)
txhousing_model %>% mutate(v = model %>% map(broom::augment.glm)) %>% unnest(v)
txhousing %>% group_nest(city) %>% mutate(model = data %>% map(~ lm(log2(sale) ~ factor(month), na.action = na.exclude, data = .)))
txhousing %>% group_nest(city) %>% mutate(model = data %>% map(~ lm(log2(sales) ~ factor(month), na.action = na.exclude, data = .)))
txhousing %>% group_nest(city) %>% mutate(model = data %>% map(~ lm(log2(sales) ~ factor(month), na.action = na.exclude, data = .))) %>% mutate(obs = model %>% map(generics::augment))
?augment.lm
txhousing_model %>%
mutate(obs = model %>% map(generics::augment, na.action = "na.exclude")) %>%
unnest(obs)
txhousing_model %>% pull(model)
txhousing_model %>% pull(model) %>% pluck(1)
txhousing_model %>% pull(model) %>% pluck(1) %>% augment()
txhousing_model %>% pull(data) %>% pluck(1)
txhousing
txhousing_model %>% pull(model) %>% map(augment)
txhousing_model %>% pull(model)
txhousing_model %>% pull(model) %>% lmap(augment)
txhousing_model %>% pull(model) %>% map(augment)
txhousing_model %>% pull(model) %>% map(generics::augment)
txhousing_model %>% pull(model) %>% map(generics::augment, na.action = na.exclude)
list(tibble(x = 1), tibble(x = 2))
for(model in txhousing_model %>% pul(model)) print(model)
for(model in txhousing_model %>% pull(model)) print(model)
for(model in txhousing_model %>% pull(model)) print(model %>% augment)
txhousing_model %>% pull(7) %>% augment
txhousing_model %>% pull(model) %>% pluck(7) %>% augment()
txhousing_model %>% pull(model) %>% pluck(6) %>% augment()
txhousing_model %>% pull(model) %>% pluck(7) %>% augment()
txhousing_model
txhousing_model %>% pull(data) %>% pluck(7)
txhousing_model %>% pull(data) %>% pluck(7) %>% lm(log2(sales) ~ factor(month), na.action = na.exclude)
args(lm)
lm(log2(sales) ~ factor(month), na.action = na.exclude, data = txhousing_model %>% pull(data) %>% pluck(7))
lm(log2(sales) ~ factor(month), na.action = na.exclude, data = txhousing_model %>% pull(data) %>% pluck(7)) %>% augment()
lm(log2(sales) ~ factor(month), na.action = na.exclude, data = txhousing_model %>% pull(data) %>% pluck(7)) %>% augment(na.action = na.exclude)
lm(log2(sales) ~ factor(month), na.action = na.exclude, data = txhousing_model %>% pull(data) %>% pluck(7) %>% drop_na()) %>% augment(na.action = na.exclude)
?augment
txhousing_model %>%
mutate(obs = model %>% map(generics::augment)) %>%
unnest(obs)
rlang::last_error()
rlang::last_trace()
?predict
?na.exclude
DF <- data.frame(x = c(1, 2, 3), y = c(0, 10, NA))
DF
DF %>% na.omit
DF %>% na.fail
DF %>% na.fail()
DF %>% na.exclude
lm(log2(sales) ~ factor(month), na.action = na.exclude, data = txhousing_model %>% pull(data) %>% pluck(7) %>% drop_na()) %>% augment(na.action = na.exclude)
lm(log2(sales) ~ factor(month), na.action = na.exclude, data = txhousing_model %>% pull(data) %>% pluck(7)) %>% augment(na.action = na.exclude)
lm(log2(sales) ~ factor(month), data = txhousing_model %>% pull(data) %>% pluck(7)) %>% augment(na.action = na.exclude)
txhousing %>% group_nest(city) %>% mutate(model = data.map(~ lm(log2(sales) ~ factor(month), data = .)))
txhousing %>% group_nest(city) %>% mutate(model = data %>% map(~ lm(log2(sales) ~ factor(month), data = .)))
txhousing %>% group_nest(city) %>% mutate(model = data %>% map(~ lm(log2(sales) ~ factor(month), data = .))) %>% map(obs = model %>% map(augment))
txhousing %>% group_nest(city) %>% mutate(model = data %>% map(~ lm(log2(sales) ~ factor(month), data = .))) %>% map(obs = model %>% map(generics::augment))
txhousing %>% group_nest(city) %>% mutate(model = data %>% map(~ lm(log2(sales) ~ factor(month), data = .))) %>% mutate(obs = model %>% map(generics::augment))
txhousing %>% group_nest(city) %>% mutate(model = data %>% map(~ lm(log2(sales) ~ factor(month), data = ., na.action = na.exclude))) %>% mutate(obs = model %>% map(generics::augment))
txhousing %>% group_nest(city) %>% mutate(model = data %>% map(~ lm(log2(sales) ~ factor(month), data = ., na.action = na.exclude))) %>% mutate(obs = model %>% map(generics::augment))
txhousing %>% group_nest(city) %>% mutate(model = data %>% map(~ lm(log2(sales) ~ factor(month), data = .))) %>% mutate(obs = model %>% map(generics::augment))
txhousing %>% group_nest(city) %>% mutate(model = data %>% map(~ lm(log2(sales) ~ factor(month), data = .))) %>% mutate(obs = model %>% map(generics::augment))
txhousing %>%
group_nest(city) %>%
# Create a linear model for each city
mutate(model = data %>% map(~ lm(log2(sales) ~ factor(month), data = .))) %>%
mutate(obs = model %>% map(generics::augment)) %>%
unnest(obs)
obs_sum <- txhousing %>%
group_nest(city) %>%
# Create a linear model for each city
mutate(model = data %>% map(~ lm(log2(sales) ~ factor(month), data = .))) %>%
mutate(obs = model %>% map(generics::augment)) %>%
unnest(obs)
obs_sum
obs_sum %>%
ggplot(aes(.std.resid)) +
geom_histogram()
obs_sum %>%
ggplot(aes(.std.resid)) +
geom_histogram(binwidth = .1)
obs_sum %>%
ggplot(aes(.std.resid)) +
geom_histogram(binwidth = .1) +
theme_bw()
obs_sum %>%
ggplot(aes(.std.resid)) +
geom_histogram(binwidth = .1) +
theme_minimal()
obs_sum %>%
filter(abs(.std.resid) > 2)
txhousing
txhousing %>%
group_nest(city) %>%
# Create a linear model for each city
mutate(model = data %>% map(~ lm(log2(sales) ~ factor(month), data = .)))
obs_sum %>%
filter(abs(.std.resid) > 2) %>%
summary(n = n(), avg.std.resid = mean(.std.resid))
obs_sum %>%
filter(abs(.std.resid) > 2) %>%
summarize(n = n(), avg.std.resid = mean(.std.resid))
obs_sum %>%
filter(abs(.std.resid) > 2) %>%
group_by(city) %>%
summarize(n = n(), avg.std.resid = mean(.std.resid))
obs_sum %>%
filter(abs(.std.resid) > 2) %>%
group_by(city) %>%
summarize(n = n(), avg.std.resid = mean(.std.resid))
obs_sum %>%
filter(abs(.std.resid) > 2) %>%
group_by(city) %>%
summarize(n = n(), avg.std.resid = mean(.std.resid))
obs_sum %>%
ggplot(aes(.fitted, .resid)) +
geom_point()
obs_sum
obs_sum %>%
ggplot(aes(.fitted, `log2(sales)` - .fitted)) +
geom_point()
obs_sum %>%
mutate(.resid = `log2(sales)` - .fitted) %>%
ggplot(aes(.fitted, .resid)) +
geom_point()
obs_sum %>%
mutate(.resid = `log2(sales)` - .fitted) %>%
ggplot(aes(.fitted, .resid)) +
geom_point(alpha = .8)
obs_sum %>%
mutate(.resid = `log2(sales)` - .fitted) %>%
ggplot(aes(.fitted, .resid)) +
geom_point(alpha = .1)
obs_sum %>%
mutate(.resid = `log2(sales)` - .fitted) %>%
ggplot(aes(.fitted, .resid)) +
geom_point(alpha = .1) +
theme_bw()
obs_sum
txhousing
obs_sum
obs_sum %>%
unnest(data) %>%
ggplot(aes(date, log2(sales), group = city)) +
geom_line()
obs_sum %>%
unnest(data) %>%
ggplot(aes(date, log2(sales), group = city, color = abs(.std.resid) >= 2)) +
geom_line() +
scale_color_manual(values = c('grey70', 'red')) +
theme_economist_white()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(patchwork)
iris %>% ggplot(aes(Sepal.Length, Sepal.Width)) + point
point <- geom_point(size = 3, shape = 21)
iris %>% ggplot(aes(Sepal.Length, Sepal.Width)) + point
point <- geom_point(size = 3, shape = 21)
iris %>% ggplot(aes(Sepal.Length, Sepal.Width)) + point |
iris %>% ggplot(aes(Petal.Length, Petal.Width)) + point
my_point <- fuction(size = 3, shape = 21, ...) geom_point(size = size, shape = shape, ...)
my_point <- function(size = 3, shape = 21, ...) geom_point(size = size, shape = shape, ...)
iris %>% ggplot(aes(Sepal.Length, Sepal.Width)) + my_point() |
iris %>% ggplot(aes(Petal.Length, Petal.Width)) + my_point(shape = 0, color = 'tomato')
my_point <- function(size = 3, shape = 21, ...) geom_point(size = size, shape = shape, ...)
iris %>% ggplot(aes(Sepal.Length, Sepal.Width)) + my_point() |
iris %>% ggplot(aes(Petal.Length, Petal.Width)) + my_point(shape = 1, color = 'tomato')
my_point <- function(size = 3, shape = 21, ...) geom_point(size = size, shape = shape, ...)
iris %>% ggplot(aes(Sepal.Length, Sepal.Width)) + my_point() |
iris %>% ggplot(aes(Petal.Length, Petal.Width)) + my_point(shape = 5, color = 'tomato')
pink_hist <- geom_histogram(bins = 100, fill = pinnk)
pink_hist <- geom_histogram(bins = 100, fill = 'pink')
mpg %>% ggplot(aes(disp)) + pink_hist
pink_hist <- geom_histogram(bins = 100, fill = 'pink')
mpg %>% ggplot(aes(displ)) + pink_hist
pink_hist <- geom_histogram(bins = 100, fill = 'pink')
mpg %>% ggplot(aes(cty)) + pink_hist
pink_hist <- geom_histogram(bins = 100, fill = 'pink')
diamonds %>% ggplot(aes(carat)) + pink_hist
mpg
blues <- scale_fill_brewer(palette = 'Blues')
mpg %>% ggplot(aes(displ, cty, fill = cyl)) + geom_point() + blues
blues <- scale_fill_brewer(palette = 'Blues')
?theme_grey
theme_grey
install.packages("wesanderson")
library(wesanderson)
wesanderson::wes_palette()
?wesanderson::wes_palette
wesanderson::wes_palette('Royal1')
scale_colour_brewer
scale_color_wesanderson = function(type = 'discrete', palette = 'Royal1')
scale_color_wesanderson = function(type = 'discrete', palette = 'Royal1', n = 5)
wesanderson::wes_palette(type = type, name = palette, n = n)
scale_color_wesanderson = function(type = 'discrete', palette = 'Royal1', n = 5)
wesanderson::wes_palette(type = type, name = palette, n = n)
mpg %>% ggplot(aes(displ, hwy, color = cyl)) + geom_point() + scale_color_wesanderson()
?scale_color_continuous
?scale_color_brewer
scale_color_brewer()
scale_color_brewer
discrete_scale
scale_color_brewer
?discrete_scale
args(wes_palette)
?scale_color_brewer
scale_color_wesanderson = function(..., type = 'discrete', palette = 'Royal1', aesthetics = 'colour') {
discrete_scale(aesthetics, 'wesanderson', wes_palette(name = palette, type = type), ...)
}
mpg %>% ggplot(aes(displ, hwy, color = cyl)) + geom_point() + scale_color_wesanderson()
scale_color_wesanderson = function(..., type = 'discrete', palette = 'Royal1', aesthetics = 'colour') {
discrete_scale(aesthetics, 'wesanderson', wes_palette(name = palette, type = type), ...)
}
iris %>% ggplot(aes(Sepal.Length, Sepal.Width, color = Species)) + geom_point() + scale_color_wesanderson()
scale_color_brewer
?brewer_pal
wes_palette(name = 'Royal1', type = 'discrete')
wes_palette(name = 'Royal1', type = 'discrete') %>% print()
?wes_palette
discrete_scale(aesthetics, 'wesanderson', wes_palette(name = 'Royal1', type = 'discrete'))
discrete_scale('colour', 'wesanderson', wes_palette(name = 'Royal1', type = 'discrete'))
scale_color_wesanderson = function(..., type = 'discrete', palette = 'Royal1', aesthetics = 'colour') {
#discrete_scale(aesthetics, 'wesanderson', wes_palette(name = palette, type = type), ...)
discrete_scale('colour', 'wesanderson', wes_palette(name = 'Royal1', type = 'discrete'))
}
iris %>% ggplot(aes(Sepal.Length, Sepal.Width, color = Species)) + geom_point() + scale_color_wesanderson()
scale_color_brewer()
scale_color_brewer
scale_color_wesanderson <- function(..., type = 'discrete', palette = 'Royal1', aesthetics = 'colour') {
#discrete_scale(aesthetics, 'wesanderson', wes_palette(name = palette, type = type), ...)
discrete_scale('colour', 'wesanderson', wes_palette(name = 'Royal1', type = 'discrete'))
}
iris %>% ggplot(aes(Sepal.Length, Sepal.Width, color = Species)) + geom_point() + scale_color_wesanderson()
scale_color_wesanderson <- function(..., type = 'discrete', palette = 'Royal1', aesthetics = 'colour') {
#discrete_scale(aesthetics, 'wesanderson', wes_palette(name = palette, type = type), ...)
#discrete_scale('colour', 'wesanderson', wes_palette(name = 'Royal1', type = 'discrete'))
discrete_scale(aesthetics, "brewer", brewer_pal(type = 'seq',
palette = 1, direction = 1), ...)
}
iris %>% ggplot(aes(Sepal.Length, Sepal.Width, color = Species)) + geom_point() + scale_color_wesanderson()
?brewer_pal
scale_color_wesanderson <- function(..., type = 'discrete', palette = 'Royal1', aesthetics = 'colour') {
#discrete_scale(aesthetics, 'wesanderson', wes_palette(name = palette, type = type), ...)
#discrete_scale('colour', 'wesanderson', wes_palette(name = 'Royal1', type = 'discrete'))
discrete_scale(aesthetics, "brewer", scales::brewer_pal(type = 'seq',
palette = 1, direction = 1), ...)
}
iris %>% ggplot(aes(Sepal.Length, Sepal.Width, color = Species)) + geom_point() + scale_color_wesanderson()
scale_color_wesanderson <- function(..., type = 'discrete', palette = 'Royal1', aesthetics = 'colour') {
#discrete_scale(aesthetics, 'wesanderson', wes_palette(name = palette, type = type), ...)
#discrete_scale('colour', 'wesanderson', wes_palette(name = 'Royal1', type = 'discrete'))
#discrete_scale(aesthetics, "brewer", scales::brewer_pal(type = 'seq', palette = 1, direction = 1), ...)
discrete_scale(aesthetics, "wesanderson", wes_palette(type = 'discrete', palette = 'Royal1'), ...)
}
iris %>% ggplot(aes(Sepal.Length, Sepal.Width, color = Species)) + geom_point() + scale_color_wesanderson()
scale_color_wesanderson <- function(..., type = 'discrete', palette = 'Royal1', aesthetics = 'colour') {
#discrete_scale(aesthetics, 'wesanderson', wes_palette(name = palette, type = type), ...)
#discrete_scale('colour', 'wesanderson', wes_palette(name = 'Royal1', type = 'discrete'))
#discrete_scale(aesthetics, "brewer", scales::brewer_pal(type = 'seq', palette = 1, direction = 1), ...)
discrete_scale(aesthetics, "wesanderson", wes_palette(type = 'discrete', name = 'Royal1'), ...)
}
iris %>% ggplot(aes(Sepal.Length, Sepal.Width, color = Species)) + geom_point() + scale_color_wesanderson()
scales::brewer_pal(type = 'seq', palette = 1)
scale_color_brewer
scale_color_wesanderson <- function(..., type = 'discrete', palette = 'Royal1', aesthetics = 'colour') {
#discrete_scale(aesthetics, 'wesanderson', wes_palette(name = palette, type = type), ...)
#discrete_scale('colour', 'wesanderson', wes_palette(name = 'Royal1', type = 'discrete'))
#discrete_scale(aesthetics, "brewer", scales::brewer_pal(type = 'seq', palette = 1, direction = 1), ...)
discrete_scale(aesthetics, "wesanderson", partial(wes_palette, type = 'discrete', name = 'Royal1')), ...)
scale_color_wesanderson <- function(..., type = 'discrete', palette = 'Royal1', aesthetics = 'colour') {
#discrete_scale(aesthetics, 'wesanderson', wes_palette(name = palette, type = type), ...)
#discrete_scale('colour', 'wesanderson', wes_palette(name = 'Royal1', type = 'discrete'))
#discrete_scale(aesthetics, "brewer", scales::brewer_pal(type = 'seq', palette = 1, direction = 1), ...)
discrete_scale(aesthetics, "wesanderson", partial(wes_palette, type = 'discrete', name = 'Royal1'), ...)
}
iris %>% ggplot(aes(Sepal.Length, Sepal.Width, color = Species)) + geom_point() + scale_color_wesanderson()
partial(wes_palette, type = 'discrete', name = 'Royal1')
scale_color_wesanderson <- function(..., type = 'discrete', palette = 'Royal1', aesthetics = 'colour') {
#discrete_scale(aesthetics, 'wesanderson', wes_palette(name = palette, type = type), ...)
#discrete_scale('colour', 'wesanderson', wes_palette(name = 'Royal1', type = 'discrete'))
#discrete_scale(aesthetics, "brewer", scales::brewer_pal(type = 'seq', palette = 1, direction = 1), ...)
#discrete_scale(aesthetics, "wesanderson", partial(wes_palette, type = 'discrete', name = 'Royal1'), ...)
discrete_scale(aesthetics, 'wesanderson', function(n) wes_palette(type = type, name = palette), ...)
}
iris %>% ggplot(aes(Sepal.Length, Sepal.Width, color = Species)) + geom_point() + scale_color_wesanderson()
?wes_palette
scale_color_wesanderson <- function(..., type = 'discrete', palette = 'Royal1', aesthetics = 'colour') {
discrete_scale(aesthetics, 'wesanderson', function(n) wes_palette(type = type, name = palette), ...)
}
p <- iris %>% ggplot(aes(Sepal.Length, Sepal.Width, color = Species)) + geom_point()
p + scale_color_wesanderson()
p + scale_color_wesanderson(palette = 'BottleRocket1')
scale_color_wesanderson <- function(..., type = 'discrete', palette = 'Royal1', aesthetics = 'colour') {
discrete_scale(aesthetics, 'wesanderson', function(n) wes_palette(type = type, name = palette), ...)
}
p <- iris %>% ggplot(aes(Sepal.Length, Sepal.Width, color = Species)) + geom_point() + theme_light()
p + scale_color_wesanderson()
p + scale_color_wesanderson(palette = 'BottleRocket1')
scale_color_wesanderson <- function(..., type = 'discrete', palette = 'Royal1', aesthetics = 'colour') {
discrete_scale(aesthetics, 'wesanderson', function(n) wes_palette(type = type, name = palette), ...)
}
p <- iris %>% ggplot(aes(Sepal.Length, Sepal.Width, color = Species)) + geom_point() + theme_dark()
p + scale_color_wesanderson()
p + scale_color_wesanderson(palette = 'BottleRocket1')
scale_color_wesanderson <- function(..., type = 'discrete', palette = 'Royal1', aesthetics = 'colour') {
discrete_scale(aesthetics, 'wesanderson', function(n) wes_palette(type = type, name = palette), ...)
}
p <- iris %>% ggplot(aes(Sepal.Length, Sepal.Width, color = Species)) + geom_point()
p + scale_color_wesanderson() + theme_dark()
p + scale_color_wesanderson(palette = 'BottleRocket1') + theme_light()
scale_color_wesanderson <- function(..., type = 'discrete', palette = 'Royal1', aesthetics = 'colour') {
discrete_scale(aesthetics, 'wesanderson', function(n) wes_palette(type = type, name = palette), ...)
}
p <- iris %>% ggplot(aes(Sepal.Length, Sepal.Width, color = Species)) + geom_point()
p + scale_color_wesanderson() + theme_dark() |
p + scale_color_wesanderson(palette = 'BottleRocket1') + theme_light()
scale_color_wesanderson <- function(..., type = 'discrete', palette = 'Royal1', aesthetics = 'colour') {
discrete_scale(aesthetics, 'wesanderson', function(n) wes_palette(type = type, name = palette), ...)
}
p <- iris %>% ggplot(aes(Sepal.Length, Sepal.Width, color = Species)) + geom_point(show.legend = F)
p + scale_color_wesanderson() + theme_dark()
p + scale_color_wesanderson(palette = 'BottleRocket1') + theme_light()
scale_color_wesanderson <- function(..., type = 'discrete', palette = 'Royal1', aesthetics = 'colour') {
discrete_scale(aesthetics, 'wesanderson', function(n) wes_palette(type = type, name = palette), ...)
}
p <- iris %>% ggplot(aes(Sepal.Length, Sepal.Width, color = Species)) + geom_point(show.legend = F)
p + scale_color_wesanderson() + theme_dark() |
p + scale_color_wesanderson(palette = 'BottleRocket1') + theme_light()
geom_mean <- function() {
list(
stat_summary(fun.y = "mean", geom = "bar", fill = "grey70"),
stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.4)
)
}
ggplot(mpg, aes(class, cty)) + geom_mean()
ggplot(mpg, aes(drv, cty)) + geom_mean()
geom_mean <- function() {
list(
stat_summary(fun = "mean", geom = "bar", fill = "grey70"),
stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.4)
)
}
ggplot(mpg, aes(class, cty)) + geom_mean()
ggplot(mpg, aes(drv, cty)) + geom_mean()
library(Hmisc)
install.packages('Hmisc')
library(Hmisc)
geom_mean <- function() {
list(
stat_summary(fun = "mean", geom = "bar", fill = "grey70"),
stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.4)
)
}
ggplot(mpg, aes(class, cty)) + geom_mean()
ggplot(mpg, aes(drv, cty)) + geom_mean()
library(Hmisc)
geom_mean <- function() {
list(
stat_summary(fun = "mean", geom = "bar", fill = "grey70"),
stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.4)
)
}
ggplot(mpg, aes(class, cty)) + geom_mean()
ggplot(mpg, aes(drv, cty)) + geom_mean()
if(TRUE) 5
if(FALSE) 5
geom_mean1 <- function() {
stat_summary(fun = "mean", geom = "bar", fill = "grey70") +
stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.4)
}
mpg %>% ggplot(aes(class, cty)) + geom_mean1
geom_point() + geom_line()
geom_mean <- function(se = TRUE) {
list(
stat_summary(fun.y = "mean", geom = "bar", fill = "grey70"),
if (se)
stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.4)
)
}
ggplot(mpg, aes(drv, cty)) + geom_mean()
ggplot(mpg, aes(drv, cty)) + geom_mean(se = FALSE)
geom_mean <- function(se = TRUE) {
list(
stat_summary(fun = "mean", geom = "bar", fill = "grey70"),
if (se)
stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.4)
)
}
ggplot(mpg, aes(drv, cty)) + geom_mean()
ggplot(mpg, aes(drv, cty)) + geom_mean(se = FALSE)
geom_mean <- function(se = TRUE) {
list(
stat_summary(fun = "mean", geom = "bar", fill = "grey70"),
if (se)
stat_summary(fun.data = "mean_cl_normal", geom = "errorbar", width = 0.4)
)
}
ggplot(mpg, aes(drv, cty)) + geom_mean()
ggplot(mpg, aes(drv, cty)) + geom_mean(se = FALSE)
?qplot
piechart <- function(data, mapping) {
ggplot(data, mapping) +
geom_bar(width = 1) +
coord_polar(theta = "y") +
xlab(NULL) +
ylab(NULL)
}
piechart(mpg, aes(factor(1), fill = class))
piechart <- function(data, mapping) {
ggplot(data, mapping) +
geom_bar(width = 1) +
coord_polar(theta = "y") +
xlab(NULL) +
ylab(NULL)
}
piechart(mpg, aes(factor(1), fill = class))
f <- function() {
levs <- c("2seater", "compact", "midsize", "minivan", "pickup",
"subcompact", "suv")
piechart3(mpg, factor(class, levels = levs))
}
f()
f <- function() {
levs <- c("2seater", "compact", "midsize", "minivan", "pickup",
"subcompact", "suv")
piechart3(mpg, factor(class, levels = ~ levs))
}
f()
show_dist <- function(data, var) data %>% ggplot(aes_(quote(var))) + geom_histogram()
iris %>% show_dist(Sepal.Length)
show_dist <- function(data, var) data %>% ggplot(aes_(quote(var))) + geom_histogram()
iris %>% show_dist('Sepal.Length')
show_dist <- function(data, var) data %>% ggplot(aes_(as.name(var))) + geom_histogram()
iris %>% show_dist('Sepal.Length')
geoms <- list(
geom_point(),
geom_boxplot(aes(group = cut_width(displ, 1))),
list(geom_point(), geom_smooth())
)
p <- ggplot(mpg, aes(displ, hwy))
lapply(geoms, function(g) p + g)
plots <- list(
ggplot(mpg, aes(displ, hwy)),
ggplot(diamonds, aes(carat, price)),
ggplot(faithfuld, aes(waiting, eruptions, size = density))
)
plots %>% walk(~ . + geom_point())
plots %>% lapply(~ . + geom_point())
plots %>% lapply(as_mapper(~ . + geom_point()))
?lapply
?walk
plots
plots %>% walk(~ . + geom_point())
plots %>% walk(~ . + geom_point() %>% print())
