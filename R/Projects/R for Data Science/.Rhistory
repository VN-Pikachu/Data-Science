mutate(v = model %>% map(generics::augment)) %>%
unnest(v)
library(splines)
res <- gapminder %>%
mutate(year = year - mean(year)) %>%
group_nest(country, continent) %>%
mutate(model = data %>% map(~ lm(lifeExp ~ ns(year, 2), data = .)))  %>%
mutate(v = model %>% map(generics::augment)) %>%
unnest(v)
res
library(splines)
res <- gapminder %>%
mutate(year = year - mean(year)) %>%
group_nest(country, continent) %>%
mutate(model = data %>% map(~ lm(lifeExp ~ ns(year, 2), data = .)))  %>%
mutate(v = model %>% map(generics::augment)) %>%
unnest(v)
res
library(splines)
res <- gapminder %>%
mutate(year = year - mean(year)) %>%
group_nest(country, continent) %>%
mutate(model = data %>% map(~ lm(lifeExp ~ ns(year, 2), data = .)))  %>%
mutate(v = model %>% map(generics::augment)) %>%
unnest(v)
res %>% print()
res
?ns
library(splines)
res <- gapminder %>%
mutate(year = year - mean(year)) %>%
group_nest(country, continent) %>%
mutate(model = data %>% map(~ lm(lifeExp ~ ns(year, 2), data = .)))  %>%
mutate(v = model %>% map(generics::glance)) %>%
unnest(v)
res
library(splines)
res <- gapminder %>%
mutate(year = year - mean(year)) %>%
group_nest(country, continent) %>%
mutate(model = data %>% map(~ lm(lifeExp ~ ns(year, 2), data = .)))  %>%
mutate(v = model %>% map(generics::glance)) %>%
unnest(v)
res
res <- gapminder %>%
mutate(year = year - mean(year)) %>%
group_nest(country, continent) %>%
mutate(model = data %>% map(~ lm(lifeExp ~ ns(year, 2), data = .)))  %>%
mutate(augment = model %>% map(generics::augment)) %>%
unnest(augment)
res
res <- gapminder %>%
mutate(year = year - mean(year)) %>%
group_nest(country, continent) %>%
mutate(model = data %>% map(~ lm(lifeExp ~ ns(year, 2), data = .)))  %>%
mutate(resid = data %>% map2(model, add_residuals)) %>%
unnest(resid)
res
res <- gapminder %>%
mutate(year = year - mean(year)) %>%
group_nest(country, continent) %>%
mutate(model = data %>% map(~ lm(lifeExp ~ ns(year, 2), data = .)))  %>%
# for each pair of `data` and `model`, calculate the residual tibble
mutate(resid = data %>% map2(model, add_residuals)) %>%
unnest(resid)
res
res %>%
ggplot(aes(year, resid, group = country)) +
geom_line(alpha = .4)
res <- gapminder %>%
mutate(year = year - mean(year)) %>%
group_nest(country, continent) %>%
mutate(model = data %>% map(~ lm(lifeExp ~ ns(year, 2), data = .)))  %>%
# for each pair of `data` and `model`, calculate the residual tibble
mutate(resid = data %>% map2(model, modelr::add_residuals)) %>%
unnest(resid)
res
res %>%
ggplot(aes(year, resid, group = country)) +
geom_line(alpha = .4) +
geom_smooth()
res %>%
ggplot(aes(year, resid)) +
geom_line(aes(group = country), alpha = .4) +
geom_smooth()
library(ggbeeswarm)
gapminder_glance
?`ggbeeswarm-package`
?geom_beeswarm
library(ggbeeswarm)
gapminder_glance
gapminder_glance %>%
ggplot(aes(continent, r.squared)) +
geom_beeswarm()
?map
?lengths
setwd("C:/Users/dell/RStudio/Projects/R for Data Science/Communication")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
mpg %>%
ggplot(aes(displ, hwy)) +
geom_point()
mpg %>%
ggplot(aes(displ, hwy, color = class)) +
geom_point() +
labs(x = 'Displacement (L)',
y = 'Highway MPG',
color = 'car type',
title = 'Fuel economy deacreases with eninge displacment',
caption = 'from fuel economy gov')
mpg %>%
ggplot(aes(displ, hwy, color = class)) +
geom_point() +
labs(x = 'Displacement (L)',
y = 'Highway MPG',
color = 'car type',
title = 'Fuel economy generally deacreases with eninge size',
subtitle = '2 seaters car (sport cars) are exceptional because of their lightweight',
caption = 'Data from fueleconomy.gov')
mpg %>%
ggplot(aes(displ, hwy, color = class)) +
geom_point() +
labs(x = 'Displacement (L)',
y = 'Highway MPG',
color = 'car type',
title = 'Fuel economy generally deacreases with eninge size',
subtitle = '2 seaters car (sport cars) are exceptional because of their lightweight',
caption = 'Data from fueleconomy.gov')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
mpg %>%
ggplot(aes(displ, hwy, color = class)) +
geom_point() +
labs(x = 'Displacement (L)',
y = 'Highway MPG',
color = 'car type',
title = 'Fuel economy generally deacreases with eninge size',
subtitle = '2 seaters car (sport cars) are exceptional because of their lightweight',
caption = 'Data from fueleconomy.gov')
mpg %>%
ggplot(aes(displ, hwy)) +
geom_point() +
geom_smooth()
mpg %>%
ggplot(aes(displ, hwy)) +
geom_point() +
geom_smooth(method = 'lm')
mpg %>%
ggplot(aes(displ, hwy)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_light()
mpg %>%
ggplot(aes(displ, hwy)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_bw()
mpg %>%
ggplot(aes(displ, hwy)) +
geom_point() +
geom_smooth(method = 'lm') +
labs(x = 'displacement (L)',
y = 'highway MPG',
title = 'Fuel economy generally decreases with engine size',
caption = 'data from fueleconomy.gov')
theme_bw()
mpg %>%
ggplot(aes(displ, hwy)) +
geom_point() +
geom_smooth(method = 'lm') +
labs(x = 'displacement (L)',
y = 'highway MPG',
title = 'Fuel economy generally decreases with engine size',
caption = 'data from fueleconomy.gov') +
theme_bw()
mpg %>%
ggplot(aes(displ, hwy)) +
geom_point() +
geom_smooth(method = 'lm') +
labs(x = 'displacement (L)',
y = 'highway MPG',
title = 'Fuel economy generally decreases with engine size',
caption = 'data from fueleconomy.gov') +
theme_bw()
library(ggrepel)
best <- mpg %>% group_by(class) %>% slice_min(hwy)
best
mpg %>% ggplot(aes(displ, hwy, color = class)) + geom_point()
library(tidyverse)
library(ggrepel)
mpg %>% ggplot(aes(displ, hwy, color = class)) + geom_point() + geom_label_repel(data = best, label = class)
mpg %>% ggplot(aes(displ, hwy, color = class)) + geom_point() + geom_label_repel(data = best, label = class)
mpg %>% ggplot(aes(displ, hwy, color = class)) + geom_point() + geom_label_repel(data = best, labels = class)
mpg %>% ggplot(aes(displ, hwy, color = class)) + geom_point() + geom_label_repel(data = best, aes(label = class))
mpg %>% ggplot(aes(displ, hwy, color = class)) + geom_point() + geom_label_repel(data = best, aes(label = class)) + +geom_point() + theme_bw()
mpg %>% ggplot(aes(displ, hwy, color = class)) + geom_point() + geom_label_repel(data = best, aes(label = class)) + geom_point() + theme_bw()
mpg %>% ggplot(aes(displ, hwy, color = class)) + geom_point() + geom_label_repel(data = best, aes(label = model)) + geom_point(size = 4) + theme_bw()
mpg %>% ggplot(aes(displ, hwy, color = class)) + geom_point() + geom_label_repel(data = best, aes(label = model)) + geom_point(data = best, size = 3) + theme_bw()
mpg %>% ggplot(aes(displ, hwy, color = class)) + geom_point() + geom_label_repel(data = best, aes(label = model)) + geom_point(data = best, size = 3, color  ='white') + theme_bw()
mpg %>% ggplot(aes(displ, hwy, color = class)) + geom_point() + geom_label_repel(data = best, aes(label = model)) + geom_point(data = best, size = 2) + theme_bw()
mpg %>% ggplot(aes(displ, hwy, color = class)) + geom_point() + geom_label_repel(data = best, aes(label = model)) + geom_point(data = best, size = 2, shape = 1) + theme_bw()
tibble(x = c(-Inf, Inf), y = x)
tibble(x = c(-Inf, Inf), y = x) %>% expand(x, y)
?crossing
?corss
?cross
tibble(x = c(-Inf, Inf), y = x, x_label = c('Left', 'Right'), y_label = c('Bottom', 'Top')))
tibble(x = c(-Inf, Inf), y = x, x_label = c('Left', 'Right'), y_label = c('Bottom', 'Top'))
tibble(x = c(-Inf, Inf), y = x, x_label = c('Left', 'Right'), y_label = c('Bottom', 'Top')) %>% expand()
tibble(x = c(-Inf, Inf), y = x, x_label = c('Left', 'Right'), y_label = c('Bottom', 'Top')) %>% expand(everything())
?expand
tibble(x = c(-Inf, Inf), y = x, x_label = c('Left', 'Right'), y_label = c('Bottom', 'Top')) %>% expand(x, y)
tibble(x = c(-Inf, Inf), y = x, x_label = c('Left', 'Right'), y_label = c('Bottom', 'Top')) %>% complete(x, y)
abel <- tribble(
~displ, ~hwy, ~label, ~vjust, ~hjust,
Inf, Inf, "Top right", "top", "right",
Inf, -Inf, "Bottom right", "bottom", "right",
-Inf, Inf, "Top left", "top", "left",
-Inf, -Inf, "Bottom left", "bottom", "left"
)
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
geom_text(aes(label = label, vjust = vjust, hjust = hjust), data = label)
label <- tribble(
~displ, ~hwy, ~label, ~vjust, ~hjust,
Inf, Inf, "Top right", "top", "right",
Inf, -Inf, "Bottom right", "bottom", "right",
-Inf, Inf, "Top left", "top", "left",
-Inf, -Inf, "Bottom left", "bottom", "left"
)
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
geom_text(aes(label = label, vjust = vjust, hjust = hjust), data = label)
mpg %>% ggplot(aes(displ, hwy)) + geom_point()
mpg %>% ggplot(aes(displ, hwy)) + geom_point() + annotate(x = Inf, y = Inf, label = 'Top Right', geom = 'text')
mpg %>% ggplot(aes(displ, hwy)) + geom_point() + annotate(x = Inf, y = Inf, label = 'Top Right', geom = 'text', hjust = 'right', vjust = 'top')
mpg %>%
ggplot(aes(displ, hwy)) +
geom_point() +
facet_wrap(~ class)
mpg %>%
ggplot(aes(displ, hwy)) +
geom_point() +
facet_wrap(~ class)
mpg %>%
ggplot(aes(displ, hwy)) +
geom_point() +
annotate(label = 'Ignore this', x = Inf, y =Inf, geom = 'text') +
facet_wrap(~ class)
mpg %>%
ggplot(aes(displ, hwy)) +
geom_point() +
annotate(label = 'Ignore this', x = Inf, y =Inf, geom = 'text', hjust = 1, vjust = 1) +
facet_wrap(~ class)
label <- tibble(class = 'compact', label = 'compact car is awesome!')
mpg %>%
ggplot(aes(displ, hwy)) +
geom_point() +
geom_text(data = label, aes(label = label), x = Inf, y = Inf, hjust = 1, vjust = 1) +
facet_wrap(~ class)
label <- tibble(class = 'compact', label = 'compact car')
mpg %>%
ggplot(aes(displ, hwy)) +
geom_point() +
geom_text(data = label, aes(label = label), x = Inf, y = Inf, hjust = 1, vjust = 1) +
facet_wrap(~ class)
mpg %>% transmute(unique(class))
label <- mpg %>% distinct(class) %>% mutate(label = str_c('label for ', class))
label
label <- mpg %>% distinct(class) %>% mutate(label = str_c('label for ', class))
mpg %>%
ggplot(aes(displ, hwy)) +
geom_point() +
geom_text(data = label, aes(label = label), x = Inf, y = Inf, hjust = 1, vjust = 1) +
facet_wrap(~ class)
?geom_label
mpg %>% ggplot(aes(displ, hwy, color = class)) + geom_point() + geom_label(aes(label = model, check_overlap = T))
mpg %>% ggplot(aes(displ, hwy, color = class)) + geom_point() + geom_label(aes(label = model, label.r = 1))
mpg %>% ggplot(aes(displ, hwy, color = class)) + geom_point() + geom_label(aes(label = model), label.r = unit(1, 'lines'))
presidential
presidential %>% ggplot(aes(name, year)) + geom_point()
presidential %>% ggplot(aes(name, start, xend = name, yend = end, color = party)) + geom_point() + geom_segment()
presidential %>% ggplot(aes(name, start, xend = name, yend = end, color = party)) + geom_point() + geom_segment() + scale_color_manual(values = c(Democratic = 'red', Republican = 'Blue'))
presidential %>% ggplot(aes(name, start, xend = name, yend = end, color = party)) + geom_point() + geom_segment() + scale_color_manual(values = c(Democratic = 'blue', Republican = 'red'))
presidential %>% ggplot(aes(name, start, xend = name, yend = end, color = party)) + geom_point() + geom_segment() + scale_color_manual(values = c(Democratic = 'blue', Republican = 'red')) + coord_flip()
presidential %>% ggplot(aes(name %>% fct_reorder(start), start, xend = name, yend = end, color = party)) + geom_point() + geom_segment() + scale_color_manual(values = c(Democratic = 'blue', Republican = 'red')) + coord_flip()
presidential %>% ggplot(aes(name %>% fct_reorder(start), start, xend = name, yend = end, color = party)) + geom_point() + geom_segment() + scale_color_manual(values = c(Democratic = 'blue', Republican = 'red')) + coord_flip()
presidential %>% ggplot(aes(
name %>% fct_reorder(start),
start,
xend = name,
yend = end,
color = party
)) + geom_point() + geom_segment() + scale_color_manual(values = c(Democratic = 'blue', Republican = 'red')) + coord_flip()
presidential %>% ggplot(aes(
name %>% fct_reorder(start),
start,
xend = name,
yend = end,
color = party
)) + geom_point() +
geom_segment() +
scale_color_manual(values = c(Democratic = 'blue', Republican = 'red')) +
coord_flip() +
labs(x = NULL)
presidential
presidential %>% ggplot(aes(
name %>% fct_reorder(start),
start,
xend = name,
yend = end,
color = party
)) + geom_point() +
geom_segment() +
scale_color_manual(values = c(Democratic = 'blue', Republican = 'red')) +
coord_flip() +
labs(x = NULL) +
scale_x_date(date_breaks = '4 years')
presidential %>% ggplot(aes(
name %>% fct_reorder(start),
start,
xend = name,
yend = end,
color = party
)) + geom_point() +
geom_segment() +
scale_color_manual(values = c(Democratic = 'blue', Republican = 'red')) +
coord_flip() +
labs(x = NULL) +
scale_y_date(date_breaks = '4 years')
presidential %>% ggplot(aes(
name %>% fct_reorder(start),
start,
xend = name,
yend = end,
color = party
)) + geom_point() +
geom_segment() +
scale_color_manual(values = c(Democratic = 'blue', Republican = 'red')) +
coord_flip() +
labs(x = NULL) +
scale_y_date(date_breaks = '4 years', date_labels = '%y')
presidential %>% ggplot(aes(
name %>% fct_reorder(start),
start,
xend = name,
yend = end,
color = party
)) + geom_point() +
geom_segment() +
scale_color_manual(values = c(Democratic = 'blue', Republican = 'red')) +
coord_flip() +
labs(x = NULL, y = 'year') +
scale_y_date(date_breaks = '4 years', date_labels = '%y')
presidential %>% ggplot(aes(
name %>% fct_reorder(start),
start,
xend = name,
yend = end,
color = party
)) + geom_point() +
geom_segment() +
scale_color_manual(values = c(Democratic = 'blue', Republican = 'red')) +
labs(x = NULL, y = 'year') +
scale_y_date(date_breaks = '4 years', date_labels = '%y')
presidential %>% ggplot(aes(
name %>% fct_reorder(start),
start,
xend = name,
yend = end,
color = party
)) + geom_point() +
geom_segment() +
scale_color_manual(values = c(Democratic = 'blue', Republican = 'red')) +
labs(x = NULL,
y = 'year',
title = 'Terms of US presidents',
subtitle = 'Roosevelth (34th) to Obama (44th)') +
scale_y_date(date_breaks = '4 years', date_labels = '%y')
presidential %>% ggplot(aes(
name %>% fct_reorder(start),
start,
xend = name,
yend = end,
color = party
)) + geom_point() +
geom_segment() +
scale_color_manual(values = c(Democratic = 'blue', Republican = 'red')) +
labs(x = NULL,
y = 'year',
title = 'Terms of US presidents',
subtitle = 'Roosevelth (34th) to Obama (44th)') +
scale_y_date(date_breaks = '4 years', date_labels = '%y') +
coord_flip()
?scale_color_manual
presidential %>% ggplot(aes(
name %>% fct_reorder(start),
start,
xend = name,
yend = end,
color = party
)) + geom_point() +
geom_segment() +
scale_color_manual('Party', values = c(Democratic = 'blue', Republican = 'red')) +
labs(x = NULL,
y = 'year',
title = 'Terms of US presidents',
subtitle = 'Roosevelth (34th) to Obama (44th)') +
scale_y_date(date_breaks = '4 years', date_labels = '%y') +
coord_flip()
ggplot(diamonds, aes(carat, price)) +
geom_point(aes(colour = cut), alpha = 1 / 20)
ggplot(diamonds, aes(carat, price)) +
geom_point(aes(colour = cut), alpha = 1 / 20) +
scale_color_discrete(guide = guide_legend(override.aes = list(alpha = 1)))
scale_color_discrete(guide = guide_legend(override.aes = list(alpha = 1)))
setwd("C:/Users/dell/RStudio/Projects/R for Data Science/Communication")
render('Rmarkdown.rmd')
library(rmarkdown)
render('Rmarkdown.rmd')
getwd()
ls()
list.files()
?render
list.files()
library(tidyverse)
library(tidyverse)
iris %>%
ggplot(aes(Sepal.Length, Sepal.Width, color = Species)) +
geom_point()
library(tidyverse)
iris %>%
ggplot(aes(Sepal.Length, Sepal.Width, color = Species)) +
geom_point() +
theme_light()
library(tidyverse)
iris %>%
ggplot(aes(Sepal.Length, Sepal.Width, color = Species)) +
geom_point() +
theme_light()
library(tidyverse)
iris %>%
ggplot(aes(Sepal.Length, Sepal.Width, color = Species)) +
geom_point() +
theme_light()
library(tidyverse)
iris %>%
ggplot(aes(Sepal.Length, Sepal.Width, color = Species)) +
geom_point() +
theme_light()
library(tidyverse)
iris %>%
ggplot(aes(Sepal.Length, Sepal.Width, color = Species)) +
geom_point() +
theme_light()
library(tidyverse)
iris %>%
ggplot(aes(Sepal.Length, Sepal.Width, color = Species)) +
geom_point() +
theme_light()
list.files()
list.files()
library(ggplot2)
library(dplyr)
smaller <- diamonds %>%
filter(carat <= 2.5)
knitr::table(mtcars[1:5, ], caption = 'A table')
knitr::kable(mtcars[1:5, ], caption = 'A table')
?format
pi
format(pi, 2)
format(pi, digits = 2)
fortmat(pi, nsmall = 2)
format(pi, nsmall = 2)
format(1:20)
format(' a    ', justify = 'l')
format(' a    ', justify = 'left')
format(' a    ', justify = 'left-justified')
format(' a    ', justify = 'left')
format(' a    ', justify = 'right')
knitr::opts_chunk$set(echo = F)
mtcars %>%
filter(class = class)
mtcars %>%
filter(class == class)
knitr::opts_chunk$set(echo = F)
mtcars %>%
filter(class == target)
args(render)
?render
help.search('dot product')
methods(str)
unique(c(1, 2, 1))
rev(c(1, 2, 3))
?rev
name <- 'VN Pikachu'
saveRDS(name, 'player.rds')
readRDS('player.rds')
exp()
exp(1)
log(exp(1))
cor(c(1, 2), c(2, 4))
round(1.2343, 2)
?signif
signif(123.456, 4)
v <- matrix(1:4, nrow = 2, ncol = 2)
v
t(v)
solve(v, c(5, 6))
globalenv()
ls(globalenv())
ls.str(globalenv())
